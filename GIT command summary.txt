git diff <commitID_1> <commitID_2> ## this shows the difference between the two commits
+ ## green '+' are additions
- ## red '-' are deletions

git log ## shows the log of a given repository along with recent commits (and commit IDs)

git clone ## copy a full repository

git init ## create a new repository

git status ## show files within a repository that are untracked, committed, or staged to be committed.

git add ## places a file or files into the staging area

git diff ## with no arguments, differences are compared between the working directory and the staging area
git diff --staged ## compares differences in the staging area to the most recent commit
git diff <commit1> <commit2> ## compares differences between commits

commit reset --hard ## removes all staged files and reverts the staged file back to the original file; this action
                       is not recoverable through GIT

git checkout <commitID> ## checks out a particular commitID into the workspace
git checkout master ## need to learn later about this.  Appears to return to a particular origin.
git checkout <branchname> ## checks out the branch and switches to it

git branch ## with no arguments, shows all the current branches.  An asterisk '*' appears next to the current branch.
git branch <name> ## creates a new branch at the current node but does not switch to it (use checkout branch).

To get example used in the course:

git clone https://github.com/udacity/asteroids.git

To setup color coding:

git config --global color.ui auto
