
===================================================================

"What happens when you initialize a repository? Why do you need to do it?"

When a repository is initialized at .git subdirectory is added.  This directory
contains meta information that git uses for tracking purposes.  The .git
repository all stores different commits of each file within the repository.

===================================================================

"How is the staging area different from the working directory and the
repository? What value do you think it offers?"

The staging area holds the items from the working area that will be committed
if a later commit command is issued.  Not all files from the working area need
to be added to the staging area.  Because not all files need to be added the
user is given control over which items are stored in a repository for any
given commit.  Further it allows a message to be attached that connects to
the committed files in some logical way.

===================================================================

"How can you use the staging area to make sure you have one commit per logical
change?"

The staging area allows precise control over which files are added for a
particular commit and which are excluded.  As long commits are added at logical
breaks and files chosen properly for each commit, then the repository will
track logical changes between commits.  Even if a file receives multiple
updates for different logical reasons it is still possible, albeit a bit
difficult, to store each change.  However, this requires versions of the file
between changes is saved which defeats the purpose of GIT (you should have
committed sooner).

===================================================================

